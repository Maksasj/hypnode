<program> ::= ( <node_definition> | <type_definition> )*

<type_definition> ::= <type_declaration> "=" <type_implementation>
<type_declaration> ::= "type" <type_name>
<type_implementation> ::= "{" ( <field_definition> )* "}" | <type>
<field_definition> ::= <field_name> ":" <type_implementation> ";"

<node_definition> ::= <node_declaration> "=" <node_implementation>
<node_declaration> ::= "node" <node_name>
<node_implementation> ::= "{" ( <statement_definition> )* "}"
<statement_definition> ::= <port_definition> | <node_instance> | <node_connection>
<port_definition> ::= ("input" | "output") <field_name> ":" <type_implementation> ";"
<node_instance> ::= "let" <field_name> ":" <node_name> ";"

<node_connection> ::= <field_access> "<-" <field_access> ";"
<field_access> ::= <field_name> ("." <field_name>)*

<type> ::= <primitive_type> | <type_name>
<primitive_type> ::= "i64" | "i32" | "i16" | "i8" | "u64" | "u32" | "u16" | "u8" | "string" | "f32" | "f64" | "bool"

<type_name> ::= 
<field_name> ::= 
<node_name> ::= 