node sum { ... }
node mul { ... }

@native type u8
@native type u16
@native type u32
@native type u64

@native type i8
@native type i16
@native type i32
@native type i64

@native type f32 
@native type f64

# type char = u8
# type int = i32
# 
# type string = char[64]
# type number = i32
# 
# type p = {
#     id: number
#     name: string
# }

node exp {
    input i1: number
    input i2: number

    output o: number

    send i1 to o
}

node inc {
    input i: number
    optional s: number(1.0)

    output o: number

    node ss: sum

    send i to ss.i1 
    send s to ss.i2
    recv ss.o to o
}
