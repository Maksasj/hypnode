node equal (a: any, b: any) => (c: bool) = @import("std_experimental_equal")

node if_zero (a: i32) => (c: bool) = {
    let e: equal;

    e.a <- a;
    e.b <- zero;
    
    c <- e.c;
}

node mylog (
    @required 
    @trigger(if_zero) # Propagate only if trigger was satisfied
    message: i32
) => () = @import("std_experimental_log")

node first (a: any) => () = {
    let c: mylog;
    c.message <- one;
}

node second (a: any) => () = {
    let c: mylog;
    c.message <- zero;
}

@export("entrypoint")
node main (argc: i32, argv: string[]) => () = {
    let f: first;
    f.a <- zero;

    let c: second;
    c.a <- zero;
}