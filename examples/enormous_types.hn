type A = i32;
type B = f64;

type Matrix = f32[][];

type AB = A | B;

type Some = {
    field: {
        child: ((((((((((any | Some[])[][] | B)))))))) | A);
        child2: ((any | (any | Some[])[][])[][] | (any | Some[])[][])[];
        child2: A[] | {
            hahah: (any | Some[])[][];
        };
    };
    var: AB[];
};

type Model = {
    field: {
        child: ((((((((((any | Some[])[][] | B)))))))) | A);
        child2: ((any | (any | Some[])[][])[][] | (any | Some[])[][])[];
        child2: (any | Some[])[][] | {
            hahah: (any | Some[])[][];
        };
    };
    name: {
        a: ((((((((((any | ((((((((((any | Some[])[][] | B)))))))) | A))[][] | B)))))))) | A);
        name: {
            a: Matrix[];
            name: {
                a: Matrix[];
                name: {
                    a: Matrix[];
                        name: {
                        a: Matrix[];
                        field: {
                            child: ((((((((((any | Some[])[][] | B)))))))) | A);
                            child2: ((any | (any | Some[])[][])[][] | (any | Some[])[][])[];
                            child2: A[] | {
                                hahah: (any | Some[])[][];
                            };
                        };
                    };
                };
            };
        };
    };
};

