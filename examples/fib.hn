# Mazgo implitacija importuojama iš standartinės bibliotekos
node sum (
    @required a: i32, 
    @required b: i32
) => (c: i32) = @import("std_arithmetic_sum")

# Tipas, kuriame saugoma mazgo būsena.
type FibState = {
    a: i32
    b: i32
}

# Testinis komentaras

# Fibonačio mazgas
node fib(ins: FibState = { a: 0, b: 1 }) => (ous: FibState) = {
    let s: sum;
    s.a <- ous.a;
    s.b <- ous.b;

    ous.a <- ins.b;
    ous.b <- s.c;
}

@export("entrypoint")
node main (argc: i32, argv: string[]) => () = {
    let f: fib;

    # Mazgas yra sujungtas su pačiu savimi
    f.state <- f.state;
}